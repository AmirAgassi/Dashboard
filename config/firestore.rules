service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      // This rule allows anyone with your database reference to view, edit,
      // and delete all data in your database. It is useful for getting
      // started, but it is configured to expire after 30 days because it
      // leaves your app open to attackers. At that time, all client
      // requests to your database will be denied.
      //
      // Make sure to write security rules for your app before that time, or
      // else all client requests to your database will be denied until you
      // update your rules.
      allow read, write: if request.time < timestamp.date(2023, 10, 14);
    }
    
    // Allow read/write access to everything if the user is ADMIN
    match /{document=**} {
      allow read, write: if get(/databases/$(database)/documents/applications/dummy-placeholder/$(request.auth.uid)).data.isAdmin == true;
    }



    

    // Allow read/write access to the "applications" collection
    match /applications/{document=**} {
      allow read, write: if request.auth != null;
    }

    // Example for restricting access to specific fields within documents
    match /applications/{document=**} {
      allow read, write: if request.auth != null;
      allow read, write: if resource.data.field1 == true && request.auth.uid == resource.data.userId;
}


    // Default rule to deny read and write access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
